syntax = "proto3";

package user_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/t1pcrips/auth/pkg/user_v1;user_v1";
service User {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/user/v1"
      body: "*"
    };
  }

  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/user/v1"
    };
  }

  rpc Update(UpdateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/user/v1"
      body: "*"
    };
  }

  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/user/v1"
    };
  }
}

enum Role {
  UNKNOWN = 0;
  ROLE_USER = 1;
  ROLE_ADMIN = 2;
}

message CreateRequest {
  string name = 1 [(validate.rules).string = {min_len:3, max_len:20}];
  string email = 2 [(validate.rules).string.email = true];
  string password = 3 [(validate.rules).string = {min_len:6, max_len:50}];
  string password_confirm = 4 [(validate.rules).string = {min_len:6, max_len:50}];
  Role role = 5;
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest {
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

message GetResponse {
  int64 id = 1;
  string name = 2;
  string email = 3;
  Role role = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message UpdateRequest {
  int64 id = 1 [(validate.rules).int64.gt = 0];
  optional string name = 2 [(validate.rules).string = {min_len:3, max_len:20}];
  optional string email = 3 [(validate.rules).string.email = true];
  Role role = 4;
}

message DeleteRequest {
  int64 id = 1 [(validate.rules).int64.gt = 0];
}